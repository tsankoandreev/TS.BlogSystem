@model TS.BlogSystem.Web.Models.PostViewModel
@{
    var comment = new TS.BlogSystem.Web.Models.CommentViewModel()
    {
        PostId = Model.Id,
        IsReply = false,
    };

}
<div>
    <h4>PostViewModel</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Id)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Id)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Content)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Content)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.DateCreated)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.DateCreated)
        </dd>
    </dl>
</div>
<div class="post-reply">
    <span>
        <a id="reply-button" role="button" data-toggle="collapse" href="#replyPostComment" aria-expanded="false" aria-controls="collapse-PostComment">Reply</a>
    </span>
    <div class="collapse" id="replyPostComment">
        <form asp-controller="Comments" asp-action="Add" method="POST" data-ajax="true" data-ajax-success="onPostCommentSuccess">
            <div class="form-group">
                @Html.HiddenFor(x => comment.PostId)
                @Html.LabelFor(x => comment.Content)
                @Html.TextAreaFor(x => comment.Content, new { @class = "form-control", rows = 3 })
            </div>
            <button type="submit" class="btn btn-default">Send</button>
        </form>
    </div>
</div>
<div id="comments">
    <input type="hidden" name="commentsPage" id="commentsPage" value="1" />
    @await Component.InvokeAsync("Comments", new { postId = Model.Id })
</div>

<script>
    $(document).ready(function () {
        $('[data-toggle="collapse"]').on('click', function () {
            var $this = $(this),
                $parent = typeof $this.data('parent') !== 'undefined' ? $($this.data('parent')) : undefined;
            if ($parent === undefined) { /* Just toggle my  */
                $this.find('.fa').toggleClass('fa-plus fa-minus');
                return true;
            }

            /* Open element will be close if parent !== undefined */
            var currentIcon = $this.find('.fa');
            currentIcon.toggleClass('fa-plus fa-minus');
            $parent.find('.fa').not(currentIcon).removeClass('fa-minus').addClass('fa-plus');
        });
        }
    );
    function onPostCommentSuccess() {
        var _commentPage = Number($('#commentsPage').val());
        $.get(
            '@Url.Action("GetAll", "Comments", new
           {
               postId = Model.Id
           })&commentPage=' + _commentPage,
            function (data) {
                $("#comments").html(data);
                $('#commentsPage').val(_commentPage);

                $('#replyPostComment').find('textarea').val('')
                $('#reply-button').trigger('click');
            }
       );
        alert('success');
    }


</script>
<a asp-action="GetAll" asp-controller="Posts">Back to Posts</a>